/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {//递归写法
        if(l1==NULL)
            return l2;
        if(l2==NULL)
            return l1;
        if(l1->val<l2->val){
            l1->next = mergeTwoLists(l1->next,l2);
            return l1;
        }else{
            l2->next = mergeTwoLists(l1,l2->next);
            return l2;
        }
    }
    /*ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {//非递归写法
        ListNode *p,*p1,*p2,*res;
        p1 = l1;
        p2 = l2;
        if(p1==NULL)
            return p2;
        if(p2==NULL)
            return p1;
        res = l1;
        if(p1->val>p2->val){   //p1<p2 ,res = p1
            p1 = l2;
            p2 = l1;
            res = l2;
        }
        while(1){
            if((p1->next!=NULL)&&(p2!=NULL)){
                if(p1->next->val<=p2->val){
                    p1 = p1->next;
                }
                else{
                    p = p2->next;
                    p2->next = p1->next;
                    p1->next = p2;
                    p2 = p;
                    p1 = p1->next;
                }
            }
            else {if(p2!=NULL){
                    p1->next = p2;
                }
                  break;
            }
        }
        return res;
    }*/
};