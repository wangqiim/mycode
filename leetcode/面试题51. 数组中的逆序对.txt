class Solution {
public:

    vector<int> tmp_nums;
    int res;
    int reversePairs(vector<int>& nums) {
        int n = nums.size();
        res=0;
        tmp_nums.resize(n);
        merge(nums,0,nums.size()-1);
        return res;
    }

    void merge(vector<int>& nums,int begin,int end){ //归并[begin,mid],[mid+1,end]
        int mid = (begin+end)/2;
        if(begin>=end) return;
        merge(nums,begin,mid);
        merge(nums,mid+1,end);
        int index = end;
        int i = mid,j = end;
        while(i>=begin&j>=mid+1){
            if(nums[i]<=nums[j]){
                tmp_nums[index--] = nums[j--];
            }else{
                res+=(j-mid);
                tmp_nums[index--] = nums[i--];
            }
        }
        while(i>=begin)
            tmp_nums[index--] = nums[i--];
        while(j>=mid+1)
            tmp_nums[index--] = nums[j--];
        for(int k=begin;k<=end;k++)
            nums[k] = tmp_nums[k];
        return;
    }
};