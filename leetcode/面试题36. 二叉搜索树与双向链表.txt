/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node *pre=NULL;
    Node* treeToDoublyList(Node* root) {
        if(!root) return NULL;
        Node *pmax=root;
        Node *head=root;
        while(pmax->right) pmax = pmax->right;
        while(head->left) head = head->left;
        change(root);

        head->left = pmax;pmax->right = head;
        return head;
    }
    void change(Node* root){    //中序遍历得到前驱
        if(root->left) change(root->left);
        if(pre){
            pre->right=root;
            root->left = pre;
        } 
        pre = root;
        if(root->right) change(root->right);
        return;
    }

};