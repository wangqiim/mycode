/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *fast, *slow;
        ListNode *p;
        fast = slow = head;
        while (n--)
            fast = fast->next;
        if (fast == NULL) {
            p = head;
            head = head->next;
            delete(p);
            return head;
        }
        fast = fast->next;
        while (fast != NULL) {
            fast = fast->next;
            slow = slow->next;
        }
        p = slow->next;
        slow->next = p->next;
        delete(p);
        p = NULL;
        return head;
    }
};
