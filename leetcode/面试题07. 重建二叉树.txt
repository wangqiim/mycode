/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorder,inorder;
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        this->preorder=preorder;
        this->inorder=inorder;
        return build(0,preorder.size()-1,0,inorder.size());
    }
    
    TreeNode* build(int pre_begin,int pre_end,int in_begin,int in_end){
        if(pre_begin>pre_end)
            return NULL;
        int root_val = preorder[pre_begin]; //本次创建的结点的值
        TreeNode *p = new TreeNode(root_val);
        int mid;    //中序找到本次的结点
        for(mid=in_begin;mid<=in_end;mid++){
            if(inorder[mid]==root_val)
                break;
        }
        p->left = build(pre_begin+1,(mid-in_begin)+pre_begin,in_begin,mid-1);
        p->right = build((mid-in_begin)+pre_begin+1,pre_end,mid+1,in_end);
        return p;
    }
};