class Solution {
public:
    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {
        int dx[4] = {0, 1, 0, -1};  //0上,1右,2下,3左
        int dy[4] = {1, 0, -1, 0};
        int x = 0, y = 0;
        int d = 0;  //起始方向
        set<pair<int, int>> hashmap;
        for(int i=0;i<obstacles.size();i++){
            hashmap.insert(make_pair(obstacles[i][0],obstacles[i][1]));
        }
        int res = 0;
        for(int i=0;i<commands.size();i++){
            if(commands[i]==-2)
                d=(d-1)%4;
            else if(commands[i]==-1)
                d=(d+1)%4;
            else{
                for(int j=0;j<commands[i];j++){
                    if(hashmap.find(make_pair(x+dx[d],y+dy[d]))==hashmap.end()){    //下一步不是障碍
                        x+=dx[d];
                        y+=dy[d];
                        res = max(res,x*x+y*y);
                    }
                }
            }
        }
        return res;
    }
};