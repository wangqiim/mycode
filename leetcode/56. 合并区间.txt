bool cmp(vector<int> a,vector<int> b){
    return a.front()<b.front();
}

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int> > res;
        int n = intervals.size();
        if(n<=1) return intervals;
        sort(intervals.begin(),intervals.end(),cmp);
        vector<int> t = intervals[0];
        for(int i=1;i<n;i++){
            if(intervals[i][0]<=t[1]){
                t[1] = max(t[1],intervals[i][1]);
            }else{
                res.push_back(t);
                t = intervals[i];
            }
        }
        res.push_back(t);
        return res;
    }
};
