/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    //法一：右左中遍历
    TreeNode* pre = NULL;
    void flatten(TreeNode* root) {
        if (root == NULL) return;
        flatten(root->right);
        flatten(root->left);
        root->left = NULL;
        root->right = pre;
        pre = root;
        return;
    }

    // //先序遍历,返回指向rt子树最后一个节点的指针
    // TreeNode* dfs(TreeNode *pre, TreeNode *rt) {
    //     if (!rt) return pre;
    //     TreeNode *le = rt->left;
    //     TreeNode *ri = rt->right;
    //     rt->left = NULL;
    //     rt->right = NULL;
    //     if (pre) pre->right = rt;//rt
    //     pre = dfs(rt, le);//left
    //     TreeNode* ans = dfs(pre, ri);//right
    //     return ans;
    // }

    // void flatten(TreeNode* root) {
    //     dfs(NULL, root);
    //     return;
    // }
};
