class Solution {
public:
    int dp[501][501];   //dp[i][j]前i个拿了j个的最小值
    int maxSizeSlices(vector<int>& slices) {
        int n = slices.size();
        int m = n/3;
        vector<vector<int> > dp(n+1,vector<int>(n+1,0));    //[0~n-2]不间隔取n/3个
        vector<vector<int> > dp1(n+1,vector<int>(n+1,0));   //[1~n-1]不间隔取n/3个
        for(int i=1;i<=n-1;i++){
            for(int j=1;j<=i;j++){
                if(i==1) dp[i][j] = max(dp[i-1][j],slices[i-1]);
                else dp[i][j] = max(dp[i-1][j],dp[i-2][j-1]+slices[i-1]);  //不取,取
            }
        }
        for(int i=1;i<=n-1;i++){
            for(int j=1;j<=i;j++){
                if(i==1) dp1[i][j] = max(dp1[i-1][j],slices[i]);
                else dp1[i][j] = max(dp1[i-1][j],dp1[i-2][j-1]+slices[i]);  //不取,取
            }
        }
        return max(dp[n-1][m],dp1[n-1][m]);
    }
};