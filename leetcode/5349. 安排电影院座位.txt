class Solution {
public:
    map<pair<int,int>,int> hash;// 分成4列  123,45,67,8910 
    int maxNumberOfFamilies(int n, vector<vector<int>>& reservedSeats) {
        hash.clear();
        int res = n*2;
        int m = reservedSeats.size();
        pair<int,int> tp;
        for(int i=0;i<m;i++){
            if(reservedSeats[i][1]==1||reservedSeats[i][1]==10)
                continue;
            tp.first = reservedSeats[i][0];
            tp.second = trans(reservedSeats[i][1]);
            int sub = rol_n(tp.first);
            hash[tp] = 1;
            sub -= rol_n(tp.first);
            res -= sub;
        }
        return res;
    }
    int trans(int a){
        if(a<=3)
            return 1;
        else if(a<=5)
            return 2;
        else if(a<=7)
            return 3;
        else
            return 4;
    }
    
    int rol_n(int n){
        int a1 = hash[make_pair(n,1)];
        int a2 = hash[make_pair(n,2)];
        int a3 = hash[make_pair(n,3)];
        int a4 = hash[make_pair(n,4)];
        if(a1==0&&a2==0&&a3==0&&a4==0)
            return 2;
        if((a1==0&&a2==0)||(a3==0&&a4==0)||(a2==0&&a3==0))
            return 1;
        return 0;
    }
};