//000 000 000 0 -> 000 000 000 1 -> 000 000 001 1 -> 000 000 011 1 -> 000 000 011 1
//"0120" 
class Solution {
public:
    int longestAwesome(string s) {
        int n = s.size();
        if (n == 0) return 0;
        unordered_map<int, int> indMap;   //第一次出现的位置
        indMap[0] = -1;
        int state = 0;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            int v = s[i] - '0';
            state = state ^ (1 << v); //把第v位取反
            if (indMap.count(state) == 0) {
                indMap[state] = i;
            }
            if (indMap.count(state))
                ans = max(ans, i - indMap[state]);
            for (int j = 0; j < 10; j++) {
                int t = state ^ (1 << j);
                if (indMap.count(t))
                    ans = max(ans, i - indMap[t]);
            }
        }
        return ans;
    }
};
