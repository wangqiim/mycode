/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<int> preorder(Node* root) {	//迭代用栈,子结点从右向左依次进栈
        vector<int> res;
        stack<Node*> s;
        Node *n;
        if(root==NULL)
            return res;
        s.push(root);
        while(!s.empty()){  //尚未遍历完
            n = s.top();    //存弹出的元素
            s.pop();    //弹出
            res.push_back(n->val);
            for(int i=n->children.size()-1;i>=0;i--){
                s.push(n->children[i]);
            }
        }
        return res;
    }
};