class Solution {
public
    int findLengthOfShortestSubarray(vectorint& arr) {
        int n = arr.size();
        if (n == 0)
            return 0;
        int left_bound = n;
        int right_bound = 0;
        remove right
        int rm_ri = 0;
        for (int i = 1; i  n; i++) {
            if (arr[i - 1]  arr[i]) {
                rm_ri = n - i;
                left_bound = i - 1;
                break;
            } 
        }
        if (rm_ri == 0) return 0;
        
        remove left
        int rm_le = 0;
        for (int i = n - 2; i = 0; i--) {
            if (arr[i]  arr[i + 1]) {
                rm_le = i + 1;
                right_bound = i + 1;
                break;
            }
        }
        remove mid
        int j = right_bound;
        int rm_mid = n;
        for (int i = 0; i = left_bound; i++) {
            while (arr[j]  arr[i]) {
                j++;
                if (j == n) break;
            }
            if (j == n) break;
            rm_mid = min(rm_mid, j - i - 1);
        }
        return min(rm_le, min(rm_ri, rm_mid));
    }
};