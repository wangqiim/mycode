int G[102][102];
class Solution {
public:
    vector<bool> checkIfPrerequisite(int n, vector<vector<int>>& prerequisites, vector<vector<int>>& queries) {
        int sp = prerequisites.size();
        int sq = queries.size();
        for (int i = 0; i < n; i++) 
            for (int j = 0; j < n; j++)
                G[i][j] = 0x7fffffff;
        for (int i = 0; i < sp; i++)
            G[prerequisites[i][0]][prerequisites[i][1]] = 0;
        for (int k = 0; k < n; k++) //floyd
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) 
                    if(G[i][k] == 0 && G[k][j] == 0)
                        G[i][j] = min(G[i][j], G[i][k] + G[k][j]);
        vector<bool> ans(sq);
        for (int i = 0; i < sq; i++) {
            if(G[queries[i][0]][queries[i][1]] == 0)
                ans[i] = true;
            else 
                ans[i] = false;
        }
        return ans;
    }
};
