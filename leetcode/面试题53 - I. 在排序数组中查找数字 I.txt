class Solution {
public:
    int search(vector<int>& nums, int target) { //两次二分，先找到开始位置，再找到结束位置
        int n = nums.size();
        if(n==0) return 0;
        int low=0,high=n-1;
        int mid;
        int res_begin,res_end;
        while(low<high){    //找到开始位置
            mid = low +(high-low)/2;
            if(nums[mid] == target)
                high = mid;
            else if(nums[mid]>target)
                high = mid;
            else low = mid+1;
        }
        if(nums[low]!=target) return 0; //数组中没有
        res_begin = low;
        low = 0,high = n-1;
        while(low<high){    //找到结束位置
            mid = low+(high-low+1)/2;
            if(nums[mid] == target)
                low = mid;
            else if(nums[mid]>target)
                high = mid-1;
            else
                low = mid;
        }
        res_end = low;
        return res_end-res_begin+1;
    }
};